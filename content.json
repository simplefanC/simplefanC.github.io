{"meta":{"title":"simpleC","subtitle":null,"description":"keep it simple","author":"simpleC","url":"http://yoursite.com","root":"/"},"pages":[{"title":"","date":"2019-04-27T02:08:47.047Z","updated":"2019-04-27T02:08:47.047Z","comments":true,"path":"分布式架构概述（一）.html","permalink":"http://yoursite.com/分布式架构概述（一）.html","excerpt":"","text":"分布式架构概述（一）为什么分布式 高并发 海量数据 什么是分布式 任务分解 节点通信 分布式和集群的关系电商平台：用户、商品、订单、交易 分布式：一个业务拆分成多个子系统，部署在不同的服务器上 集群：同一个业务，部署在多个服务器上 计算机的发展历史 1946年 世界上第一台通用计算机ENIAC诞生于美国宾夕法尼亚大学。 1964年 IBM System/360 IBM公司推出的大型机。超强的计算能力、 高可靠性。带动软件架构往集中式发展， 成为当时软件架构的主流 X86 CPU RISC CPU 小型机 分布式架构的发展原因 时机成熟了（PC机的性能不断提升） 企业必须要做 “去ioe”：在阿里的IT架构中，去掉IBM的小型机、Oracle数据库、EMC存储设备取而代之的是PC、mysql、mariadb，并于2013年5月17日，阿里最后一台IBM小型机在支付宝下线 单机计算机的架构 -&gt; 分布式计算机架构 输入设备 -&gt; 用户界面、消息 输出设备 -&gt; 用户展示终端、消息 存储器 -&gt; 数据库服务器、缓存服务器 运算器 -&gt; 义务逻辑 控制器 -&gt; 负载均衡服务器等 架构的发展演变过程根据义务发展 什么是大型网站 访问量（tps、qps） 数据量（存储数据量） 电商平台的发展用户、商品、订单 容器：tomcat ；jsp/servlet 数据库存储：mysql 网络层面的知识：tcp/udp 第一版 第二版 单击负载越来越高，数据库服务器和应用服务器分离 第三版 应用服务器做集群 问题： 1.session ​ 解决session跨域共享问题 ​ 我们知道cookie存储的是JSESSIONID；session以ConcurrentMap存储：key：JSESSIONID values：session session sticky session replication session 集中存储 存储在db、 存储在缓存服务器 （redis） cookie (主流) access_token(userid/token/timestamp) 2.如何做请求转发 第四版 数据库的高性能操作 问题： 1. 数据库读写分离怎么操作 2. 数据库的数据同步 3. 数据库路由 mycat 第五版 电商平台最多的操作：搜索商品 问题： ​ 搜索引擎的索引数据怎么去做同步，实时增量同步？ 还是定时全量同步？ 第六版 解决访问量持续增高，引入缓存机制用户量是没有上限的 缓存、限流、降级 第七版 数据库的水平/垂直拆分 第八版"},{"title":"categories","date":"2019-04-24T03:13:45.000Z","updated":"2019-04-25T00:44:06.528Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-04-24T03:12:37.000Z","updated":"2019-04-25T00:28:23.592Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"分布式架构概述（二）","slug":"分布式架构概述（二）","date":"2019-04-26T13:02:11.000Z","updated":"2019-04-28T05:22:48.287Z","comments":true,"path":"2019/04/26/分布式架构概述（二）/","link":"","permalink":"http://yoursite.com/2019/04/26/分布式架构概述（二）/","excerpt":"架构的发展演变过程根据义务发展 什么是大型网站 访问量（tps、qps） 数据量（存储数据量）","text":"架构的发展演变过程根据义务发展 什么是大型网站 访问量（tps、qps） 数据量（存储数据量） 电商平台的发展用户、商品、订单 容器：tomcat；jsp/servlet 数据库存储：mysql 网络层面的知识：tcp/udp 第一版 第二版 单击负载越来越高，数据库服务器和应用服务器分离 第三版 应用服务器做集群 问题： 1.session ​ 解决session跨域共享问题 ​ 我们知道cookie存储的是JSESSIONID；session以ConcurrentMap存储：key：JSESSIONID values：session session sticky session replication session 集中存储 存储在db、 存储在缓存服务器 （redis） cookie (主流) access_token(userid/token/timestamp) 2.如何做请求转发 第四版 数据库的高性能操作 问题： 1.数据库读写分离怎么操作 2.数据库的数据同步 3.数据库路由 mycat 第五版 电商平台最多的操作：搜索商品 问题： ​ 搜索引擎的索引数据怎么去做同步，实时增量同步？ 还是定时全量同步？ 第六版 解决访问量持续增高，引入缓存机制用户量是没有上限的 缓存、限流、降级 第七版 数据库的水平/垂直拆分 第八版","categories":[{"name":"分布式","slug":"分布式","permalink":"http://yoursite.com/categories/分布式/"}],"tags":[]},{"title":"分布式架构概述（一）","slug":"分布式架构概述（一）","date":"2019-04-26T12:58:57.000Z","updated":"2019-04-26T13:33:30.451Z","comments":true,"path":"2019/04/26/分布式架构概述（一）/","link":"","permalink":"http://yoursite.com/2019/04/26/分布式架构概述（一）/","excerpt":"为什么分布式 高并发 海量数据 什么是分布式 任务分解 节点通信","text":"为什么分布式 高并发 海量数据 什么是分布式 任务分解 节点通信 分布式和集群的关系电商平台：用户、商品、订单、交易分布式：一个业务拆分成多个子系统，部署在不同的服务器上集群：同一个业务，部署在多个服务器上 计算机的发展历史 1946年 世界上第一台通用计算机ENIAC诞生于美国宾夕法尼亚大学。 1964年 IBM System/360 IBM公司推出的大型机。超强的计算能力、 高可靠性。带动软件架构往集中式发展，成为当时软件架构的主流 X86 CPU RISC CPU 小型机 分布式架构的发展原因 时机成熟了（PC机的性能不断提升） 企业必须要做“去ioe”：在阿里的IT架构中，去掉IBM的小型机、Oracle数据库、EMC存储设备;取而代之的是PC、mysql、mariadb，并于2013年5月17日，阿里最后一台IBM小型机在支付宝下线 单机计算机的架构 -&gt; 分布式计算机架构 输入设备 -&gt; 用户界面、消息 输出设备 -&gt; 用户展示终端、消息 存储器 -&gt; 数据库服务器、缓存服务器 运算器 -&gt; 义务逻辑 控制器 -&gt; 负载均衡服务器等","categories":[{"name":"分布式","slug":"分布式","permalink":"http://yoursite.com/categories/分布式/"}],"tags":[]},{"title":"Minimalist web design","slug":"Minimalist-web-design","date":"2019-04-26T05:12:30.000Z","updated":"2019-04-26T13:38:30.982Z","comments":true,"path":"2019/04/26/Minimalist-web-design/","link":"","permalink":"http://yoursite.com/2019/04/26/Minimalist-web-design/","excerpt":"","text":"所谓“最简主义”设计，就是说网页上没有不相关的内容与装饰，美工基本就是白底黑字，尽量少用图片和复杂的排版，给人一种非常简单朴素的感觉。 至于我为什么喜欢“最简主义”，除了因为我喜欢简洁的东西以外，还因为我觉得将页面最简化，可以使访问者集中注意力，关注主要的内容。我认为，“最简主义”有利于节省访问者的时间，体现了对访问者的尊重，最终也有利于网站的成功。Google就是“最简主义”的一个典型，首页上就是只有一个长长的搜索框。 这也是我为什么在众多博客框架中选择了hexo，”A fast, simple &amp; powerful blog framework”. “keep it simple” 这是我非常喜欢的一句话，最简主义”设计也将成为我今后一直坚持的理念。","categories":[{"name":"web","slug":"web","permalink":"http://yoursite.com/categories/web/"}],"tags":[{"name":"design","slug":"design","permalink":"http://yoursite.com/tags/design/"}]}]}